{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#about","title":"About","text":"<p>Generate UML diagrams in PlantUML format.</p> <p></p>"},{"location":"#features","title":"Features","text":"<p>The main features provided by this library are:</p> <ul> <li>build UML statements of a class diagram</li> <li>build image in one of the supported formats with local <code>plantuml.jar</code> executable</li> </ul>"},{"location":"getting-started/","title":"Getting-Started","text":""},{"location":"getting-started/#getting-started","title":"Getting started","text":""},{"location":"getting-started/#requirements","title":"Requirements","text":"<ul> <li>PHP 8.0 or greater</li> <li>bartlett/graph-uml</li> <li>jawira/plantuml-encoding</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":""},{"location":"getting-started/#with-composer","title":"With Composer","text":"<p>The recommended way to install this library is through composer. If you don't know yet what is composer, have a look on introduction.</p> <pre><code>composer require bartlett/graph-plantuml-generator\n</code></pre>"},{"location":"getting-started/#with-git","title":"With Git","text":"<p>The GraPHP-PlantUML can be directly used from GitHub by cloning the repository into a directory of your choice.</p> <pre><code>git clone https://github.com/llaville/graph-plantuml-generator.git\n</code></pre> <p>Additionally, you'll have to install PlantUML jar and Java Runtime (java executable). Users of Debian/Ubuntu-based distributions may simply invoke:</p> <pre><code>sudo apt update\nsudo apt-get install openjdk-11-jre-headless\n</code></pre> <p>while remaining users should install from PlantUML Download page.</p> <p>You can also use the PlantUML demo server at http://www.plantuml.com/plantuml/uml/</p>"},{"location":"01_Features/Formatters/","title":"Formatters","text":""},{"location":"01_Features/Formatters/#formatters","title":"Formatters","text":"<p>PlantUML allows one format to render vertex labels:</p> <ul> <li>DefaultFormatter</li> </ul>"},{"location":"02_Cookbook/Draw_App_Logo/","title":"Draw application UML","text":""},{"location":"02_Cookbook/Draw_App_Logo/#draw-application-uml","title":"Draw application UML","text":"<p>In this example, we will learn how to personalize render of this package UML diagram.</p> <pre><code>&lt;?php\nuse Bartlett\\GraphUml;\nuse Bartlett\\GraphPlantUml\\PlantUmlGenerator;\n\nuse Graphp\\Graph\\Graph;\n\n$generator = new PlantUmlGenerator();\n$generator-&gt;setExecutable('vendor/bin/plantuml');\n$graph = new Graph();\n$builder = new GraphUml\\ClassDiagramBuilder(\n    $generator,\n    $graph,\n    [\n        'label_format' =&gt; 'default',\n    ]\n);\n\n$builder-&gt;createVertexClass(PlantUmlGenerator::class);\n\n// personalize render\n// https://plantuml.com/en/color\n$graph-&gt;setAttribute('graph.bgcolor', 'transparent');\n$graph-&gt;setAttribute('cluster.Bartlett\\\\GraphPlantUml.graph.bgcolor', 'LightSteelBlue');\n$graph-&gt;setAttribute('cluster.Bartlett\\\\GraphUml\\\\Generator.graph.bgcolor', 'LimeGreen');\n\n// show UML diagram statements\necho $generator-&gt;createScript($graph);\n\n// default format is PNG, change it to SVG\n$generator-&gt;setFormat($format = 'svg');\n\n$target = $generator-&gt;createImageFile($graph);\necho (empty($target) ? 'no' : $target) . ' file generated' . PHP_EOL;\n</code></pre> <p>NOTE Usage of <code>getPrefix()</code> is not necessary here. We keep it, in case you'll have custom generator rather than the default one.</p> <ul> <li>We specify a transparent background color with <code>graph.bgcolor</code> attribute</li> <li>We specify the background color of <code>Bartlett\\GraphPlantUml</code> namespace with <code>cluster.Bartlett\\\\GraphPlantUml.graph.bgcolor</code> attribute</li> <li>We specify the background color of <code>Bartlett\\GraphUml\\Generator</code> namespace with <code>cluster.Bartlett\\\\GraphUml.graph.bgcolor</code> attribute</li> </ul> <p>All colors are defined at https://plantuml.com/en/color</p> <p>Namespace separator character is escaped in the attribute name, while cluster identify a subgraph</p>"}]}